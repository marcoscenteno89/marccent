{"ast":null,"code":"var _jsxFileName = \"/home/marcos/app/marccent/client/src/components/map.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { ThemeContext } from \"./var\";\nimport '../styles/Map.scss';\nimport { Circle, Map, GoogleApiWrapper } from 'google-maps-react';\nimport { MapStyle } from \"./inc/inc\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Maps extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      map: false,\n      mapData: this.props.mapData\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(props) {\n    this.setState({\n      mapData: props.mapData\n    }, () => this.updateMap());\n  }\n\n  updateMap() {\n    this.state.map.setOptions({\n      styles: MapStyle(this.context.theme)\n    });\n    this.state.map.setCenter({\n      lat: this.state.mapData.loc.lat,\n      lng: this.state.mapData.loc.lng\n    });\n  }\n\n  componentDidUpdate() {\n    this.updateMap();\n  }\n\n  update(mapProps, map) {\n    this.setState({\n      map: map\n    });\n  }\n\n  render() {\n    if (this.context.theme.id === 0) return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 45\n    }, this);\n    const a = this.context.theme;\n    const d = this.state.mapData;\n    const customStyle = MapStyle(a);\n    const con = {\n      position: 'relative',\n      width: '100%',\n      height: '100%'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map\",\n      style: this.props.styles,\n      children: /*#__PURE__*/_jsxDEV(Map, {\n        style: con,\n        containerStyle: con,\n        google: this.props.google,\n        zoom: d.zoom ? d.zoom : 12,\n        initialCenter: d.loc,\n        styles: customStyle,\n        map: this,\n        onReady: (mapProps, map) => this.update(mapProps, map, customStyle),\n        children: [...Array(4)].map((x, i) => /*#__PURE__*/_jsxDEV(Circle, {\n          radius: i * 1000,\n          center: d.loc,\n          strokeColor: \"transparent\",\n          strokeOpacity: 0,\n          strokeWeight: 5,\n          fillColor: a.hex.primary,\n          fillOpacity: 0.5\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 39\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nMaps.contextType = ThemeContext;\nexport default GoogleApiWrapper({\n  apiKey: process.env.REACT_APP_GOOGLE_API\n})(Maps);","map":{"version":3,"sources":["/home/marcos/app/marccent/client/src/components/map.js"],"names":["React","Component","Fragment","ThemeContext","Circle","Map","GoogleApiWrapper","MapStyle","Maps","constructor","props","state","map","mapData","UNSAFE_componentWillReceiveProps","setState","updateMap","setOptions","styles","context","theme","setCenter","lat","loc","lng","componentDidUpdate","update","mapProps","render","id","a","d","customStyle","con","position","width","height","google","zoom","Array","x","i","hex","primary","contextType","apiKey","process","env","REACT_APP_GOOGLE_API"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,YAAT,QAA6B,OAA7B;AACA,OAAO,oBAAP;AACA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,gBAAtB,QAA8C,mBAA9C;AACA,SAASC,QAAT,QAAyB,WAAzB;;AAEA,OAAO,MAAMC,IAAN,SAAmBP,SAAnB,CAA6B;AAGlCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAE,KADM;AAEXC,MAAAA,OAAO,EAAE,KAAKH,KAAL,CAAWG;AAFT,KAAb;AAID;;AAEDC,EAAAA,gCAAgC,CAACJ,KAAD,EAAQ;AACtC,SAAKK,QAAL,CAAc;AACZF,MAAAA,OAAO,EAAEH,KAAK,CAACG;AADH,KAAd,EAEG,MAAM,KAAKG,SAAL,EAFT;AAGD;;AAEDA,EAAAA,SAAS,GAAG;AACV,SAAKL,KAAL,CAAWC,GAAX,CAAeK,UAAf,CAA0B;AAACC,MAAAA,MAAM,EAAEX,QAAQ,CAAC,KAAKY,OAAL,CAAaC,KAAd;AAAjB,KAA1B;AACA,SAAKT,KAAL,CAAWC,GAAX,CAAeS,SAAf,CAAyB;AACvBC,MAAAA,GAAG,EAAE,KAAKX,KAAL,CAAWE,OAAX,CAAmBU,GAAnB,CAAuBD,GADL;AAEvBE,MAAAA,GAAG,EAAE,KAAKb,KAAL,CAAWE,OAAX,CAAmBU,GAAnB,CAAuBC;AAFL,KAAzB;AAID;;AAEDC,EAAAA,kBAAkB,GAAG;AACnB,SAAKT,SAAL;AACD;;AAEDU,EAAAA,MAAM,CAACC,QAAD,EAAWf,GAAX,EAAgB;AACpB,SAAKG,QAAL,CAAc;AAACH,MAAAA,GAAG,EAAEA;AAAN,KAAd;AACD;;AAEDgB,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKT,OAAL,CAAaC,KAAb,CAAmBS,EAAnB,KAA0B,CAA9B,EAAiC,oBAAO,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACjC,UAAMC,CAAC,GAAG,KAAKX,OAAL,CAAaC,KAAvB;AACA,UAAMW,CAAC,GAAG,KAAKpB,KAAL,CAAWE,OAArB;AACA,UAAMmB,WAAW,GAAGzB,QAAQ,CAACuB,CAAD,CAA5B;AACA,UAAMG,GAAG,GAAG;AACVC,MAAAA,QAAQ,EAAE,UADA;AAEVC,MAAAA,KAAK,EAAE,MAFG;AAGVC,MAAAA,MAAM,EAAE;AAHE,KAAZ;AAKA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,KAAK,EAAE,KAAK1B,KAAL,CAAWQ,MAAvC;AAAA,6BACE,QAAC,GAAD;AACE,QAAA,KAAK,EAAEe,GADT;AAEE,QAAA,cAAc,EAAEA,GAFlB;AAGE,QAAA,MAAM,EAAE,KAAKvB,KAAL,CAAW2B,MAHrB;AAIE,QAAA,IAAI,EAAEN,CAAC,CAACO,IAAF,GAASP,CAAC,CAACO,IAAX,GAAkB,EAJ1B;AAKE,QAAA,aAAa,EAAEP,CAAC,CAACR,GALnB;AAME,QAAA,MAAM,EAAES,WANV;AAOE,QAAA,GAAG,EAAE,IAPP;AAQE,QAAA,OAAO,EAAE,CAACL,QAAD,EAAWf,GAAX,KAAmB,KAAKc,MAAL,CAAYC,QAAZ,EAAsBf,GAAtB,EAA2BoB,WAA3B,CAR9B;AAAA,kBAUG,CAAC,GAAGO,KAAK,CAAC,CAAD,CAAT,EAAc3B,GAAd,CAAkB,CAAC4B,CAAD,EAAGC,CAAH,kBAAS,QAAC,MAAD;AAC1B,UAAA,MAAM,EAAEA,CAAC,GAAG,IADc;AAG1B,UAAA,MAAM,EAAEV,CAAC,CAACR,GAHgB;AAI1B,UAAA,WAAW,EAAC,aAJc;AAK1B,UAAA,aAAa,EAAE,CALW;AAM1B,UAAA,YAAY,EAAE,CANY;AAO1B,UAAA,SAAS,EAAEO,CAAC,CAACY,GAAF,CAAMC,OAPS;AAQ1B,UAAA,WAAW,EAAE;AARa,WAErBF,CAFqB;AAAA;AAAA;AAAA;AAAA,gBAA3B;AAVH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAyBD;;AApEiC;AAAvBjC,I,CAEJoC,W,GAAczC,Y;AAqEvB,eAAeG,gBAAgB,CAAC;AAC9BuC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADU,CAAD,CAAhB,CAEZxC,IAFY,CAAf","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { ThemeContext } from \"./var\"\nimport '../styles/Map.scss';\nimport { Circle, Map, GoogleApiWrapper } from 'google-maps-react';\nimport { MapStyle } from \"./inc/inc\";\n\nexport class Maps extends Component {\n\n  static contextType = ThemeContext;\n  constructor(props) {\n    super(props);\n    this.state = {\n      map: false,\n      mapData: this.props.mapData\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(props) {\n    this.setState({\n      mapData: props.mapData\n    }, () => this.updateMap());\n  }\n\n  updateMap() {\n    this.state.map.setOptions({styles: MapStyle(this.context.theme)});\n    this.state.map.setCenter({\n      lat: this.state.mapData.loc.lat, \n      lng: this.state.mapData.loc.lng\n    });\n  }\n\n  componentDidUpdate() {\n    this.updateMap();\n  }\n\n  update(mapProps, map) {\n    this.setState({map: map});\n  }\n\n  render() {\n    if (this.context.theme.id === 0) return <Fragment>Loading...</Fragment>\n    const a = this.context.theme;\n    const d = this.state.mapData;\n    const customStyle = MapStyle(a);\n    const con = {\n      position: 'relative',  \n      width: '100%',\n      height: '100%'\n    }\n    return (\n      <div className=\"map\" style={this.props.styles}>\n        <Map \n          style={con} \n          containerStyle={con} \n          google={this.props.google} \n          zoom={d.zoom ? d.zoom : 12} \n          initialCenter={d.loc}\n          styles={customStyle}\n          map={this}\n          onReady={(mapProps, map) => this.update(mapProps, map, customStyle)}\n        >\n          {[...Array(4)].map((x,i) => <Circle\n            radius={i * 1000}\n            key={i}\n            center={d.loc}\n            strokeColor='transparent'\n            strokeOpacity={0}\n            strokeWeight={5}\n            fillColor={a.hex.primary}\n            fillOpacity={0.5}\n          />)}\n        </Map>\n      </div>\n    )\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: process.env.REACT_APP_GOOGLE_API\n})(Maps)"]},"metadata":{},"sourceType":"module"}