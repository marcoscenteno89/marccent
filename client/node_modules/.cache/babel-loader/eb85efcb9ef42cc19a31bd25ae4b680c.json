{"ast":null,"code":"var _jsxFileName = \"/home/marcos/app/marccent/client/src/components/pages/contact.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { ThemeContext } from \"../var\";\nimport { PopUp } from \"../inc/inc-classes\";\nimport '../../styles/pages/Contact.scss';\nimport Maps from \"../map\";\nimport Modal from 'react-modal';\nimport ValidForm from 'react-valid-form-component';\nimport { GetMode, Title } from \"../inc/inc\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst server = `${process.env.REACT_APP_STRAPIURL}`;\nModal.setAppElement('#app');\n\nclass Contact extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      email: '',\n      message: '',\n      modal: false\n    };\n\n    this.onClick = async () => {\n      const res = await fetch(`${server}messages/`, {\n        method: 'POST',\n        credentials: 'same-origin',\n        headers: new Headers({\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }),\n        body: JSON.stringify(this.state)\n      });\n      let response = await res.json();\n\n      if (response.id) {\n        this.setState({\n          modal: true\n        });\n      }\n    };\n\n    this.nameChange = e => this.setState({\n      name: e.target.value\n    });\n\n    this.emailChange = e => this.setState({\n      email: e.target.value\n    });\n\n    this.messageChange = e => this.setState({\n      message: e.target.value\n    });\n  }\n\n  render() {\n    if (this.context.theme.id === 0) return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 45\n    }, this);\n    const a = this.context.theme;\n    const e = this.state;\n    const mode = GetMode(a, 1);\n    const bg = {\n      border: `1px solid ${a.hex.primary}`\n    };\n    const btn = {\n      background: a.grad,\n      color: a.hex.light\n    };\n    const mapData = {\n      loc: {\n        lat: 43.5,\n        lng: -112.05\n      },\n      zoom: 11\n    };\n    let background = `page-contact${a.glass ? ' glass' : ''}`;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(WaveSvg, {\n        dir: \"top\",\n        styles: {\n          fill: a.mode\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: background,\n        style: {\n          backgroundColor: a.mode\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contact flex-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-size\",\n            children: /*#__PURE__*/_jsxDEV(Maps, {\n              mapData: mapData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-area flex-row\",\n            style: {\n              backgroundColor: mode\n            },\n            children: [/*#__PURE__*/_jsxDEV(ValidForm, {\n              nosubmit: true,\n              onSubmit: e => this.onClick(e),\n              className: \"flex-col contact-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                style: {\n                  color: a.rev\n                },\n                children: \"GET IN TOUCH\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"full_name\",\n                type: \"text\",\n                required: true,\n                placeholder: \"Full Name\",\n                style: bg,\n                onChange: this.nameChange,\n                value: e.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"email\",\n                type: \"email\",\n                required: true,\n                placeholder: \"Email\",\n                style: bg,\n                value: e.email,\n                onChange: this.emailChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                required: true,\n                name: \"message\",\n                style: bg,\n                placeholder: \"Message\",\n                value: e.message,\n                onChange: this.messageChange,\n                rows: \"5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn\",\n                style: btn,\n                type: \"submit\",\n                children: \"Send Form\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PopUp, {\n          header: \"Status\",\n          display: this.state.modal,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Message has been received.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WaveSvg, {\n        dir: \"bottom\",\n        styles: {\n          fill: a.mode\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nContact.contextType = ThemeContext;\nexport default Contact;","map":{"version":3,"sources":["/home/marcos/app/marccent/client/src/components/pages/contact.js"],"names":["React","Component","Fragment","ThemeContext","PopUp","Maps","Modal","ValidForm","GetMode","Title","server","process","env","REACT_APP_STRAPIURL","setAppElement","Contact","state","name","email","message","modal","onClick","res","fetch","method","credentials","headers","Headers","body","JSON","stringify","response","json","id","setState","nameChange","e","target","value","emailChange","messageChange","render","context","theme","a","mode","bg","border","hex","primary","btn","background","grad","color","light","mapData","loc","lat","lng","zoom","glass","fill","backgroundColor","rev","contextType"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { ThemeContext } from \"../var\"\nimport { PopUp } from \"../inc/inc-classes\";\nimport '../../styles/pages/Contact.scss';\nimport Maps from \"../map\";\nimport Modal from 'react-modal';\nimport ValidForm from 'react-valid-form-component';\nimport { GetMode, Title } from \"../inc/inc\";\n\nconst server = `${process.env.REACT_APP_STRAPIURL}`;\nModal.setAppElement('#app');\n\nclass Contact extends Component {\n\n  state = {\n    name: '',\n    email: '',\n    message: '',\n    modal: false\n  }\n\n  onClick = async () => {\n    const res = await fetch(`${server}messages/`, {\n      method: 'POST',\n      credentials: 'same-origin',\n      headers: new Headers({'Content-Type': 'application/json', 'Accept': 'application/json'}),\n      body: JSON.stringify(this.state)\n    });\n    let response = await res.json();\n    if (response.id) {\n      this.setState({ modal: true });\n    }\n  }\n  nameChange = e => this.setState({ name: e.target.value});\n  emailChange = e => this.setState({ email: e.target.value});\n  messageChange = e => this.setState({ message: e.target.value});\n\n  static contextType = ThemeContext;\n  render() {\n    if (this.context.theme.id === 0) return <Fragment>Loading...</Fragment>\n    const a = this.context.theme;\n    const e = this.state;\n    const mode = GetMode(a, 1);\n    const bg = {\n      border: `1px solid ${a.hex.primary}`\n    }\n    const btn = {\n      background: a.grad,\n      color: a.hex.light\n    }\n    const mapData = {\n      loc: {\n        lat: 43.5, \n        lng: -112.05\n      },\n      zoom: 11\n    }\n    let background = `page-contact${a.glass ? ' glass' : ''}`;\n    return  (\n      <div>\n        <WaveSvg dir=\"top\" styles={{ fill: a.mode}} />\n        <section className={background} style={{backgroundColor: a.mode}}>\n            <div className=\"contact flex-center\">\n              <div className=\"map-size\">\n                <Maps mapData={mapData} />\n              </div>\n              <div className=\"form-area flex-row\" style={{ backgroundColor: mode }}>\n                <ValidForm \n                  nosubmit \n                  onSubmit={(e) => this.onClick(e)} \n                  className=\"flex-col contact-info\" \n                >\n                  <h3 style={{color: a.rev}}>GET IN TOUCH</h3>\n                  <input \n                    name=\"full_name\"\n                    type=\"text\" \n                    required\n                    placeholder=\"Full Name\" \n                    style={bg} \n                    onChange={this.nameChange} \n                    value={e.name}\n                  />\n                  <input \n                    name=\"email\"\n                    type=\"email\" \n                    required\n                    placeholder=\"Email\" \n                    style={bg} \n                    value={e.email} \n                    onChange={this.emailChange} \n                  />\n                  <textarea \n                    required\n                    name=\"message\"\n                    style={bg} \n                    placeholder=\"Message\" \n                    value={e.message} \n                    onChange={this.messageChange} \n                    rows=\"5\"\n                  ></textarea>\n                  <button className=\"btn\" style={btn} type=\"submit\">Send Form</button>\n                </ValidForm>\n                <div className=\"\">\n\n                </div>\n              </div>\n              \n            </div>\n            <PopUp header=\"Status\" display={this.state.modal}>\n              <p>Message has been received.</p>\n            </PopUp>\n        </section>\n        <WaveSvg dir=\"bottom\" styles={{ fill: a.mode}} />\n      </div>\n    )        \n  }\n}\n\nexport default Contact;"]},"metadata":{},"sourceType":"module"}