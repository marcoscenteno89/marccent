[{"/home/marcos/app/marccent/client/src/index.js":"1","/home/marcos/app/marccent/client/src/App.js":"2","/home/marcos/app/marccent/client/src/serviceWorker.js":"3","/home/marcos/app/marccent/client/src/components/theme.js":"4","/home/marcos/app/marccent/client/src/components/var.js":"5","/home/marcos/app/marccent/client/src/components/urls.js":"6","/home/marcos/app/marccent/client/src/components/inc/main-nav.js":"7","/home/marcos/app/marccent/client/src/components/inc/footer.js":"8","/home/marcos/app/marccent/client/src/components/inc/inc.js":"9","/home/marcos/app/marccent/client/src/components/sections/hero-banner.js":"10","/home/marcos/app/marccent/client/src/components/pages/contact.js":"11","/home/marcos/app/marccent/client/src/components/pages/portfolio.js":"12","/home/marcos/app/marccent/client/src/components/pages/apps.js":"13","/home/marcos/app/marccent/client/src/components/pages/about.js":"14","/home/marcos/app/marccent/client/src/components/mini-app/temperature.js":"15","/home/marcos/app/marccent/client/src/components/mini-app/minesweeper.js":"16","/home/marcos/app/marccent/client/src/components/pages/privacy-policy.js":"17","/home/marcos/app/marccent/client/src/components/inc/inc-classes.js":"18","/home/marcos/app/marccent/client/src/components/map.js":"19","/home/marcos/app/marccent/client/src/components/inc/app-nav.js":"20"},{"size":575,"mtime":1615168804458,"results":"21","hashOfConfig":"22"},{"size":647,"mtime":1620879673349,"results":"23","hashOfConfig":"22"},{"size":5086,"mtime":1590718599888,"results":"24","hashOfConfig":"22"},{"size":1073,"mtime":1620876589217,"results":"25","hashOfConfig":"22"},{"size":4214,"mtime":1621738617761,"results":"26","hashOfConfig":"22"},{"size":1541,"mtime":1635705319144,"results":"27","hashOfConfig":"22"},{"size":3090,"mtime":1635648737319,"results":"28","hashOfConfig":"22"},{"size":9091,"mtime":1621726476528,"results":"29","hashOfConfig":"22"},{"size":9074,"mtime":1635741285804,"results":"30","hashOfConfig":"22"},{"size":1060,"mtime":1635649782821,"results":"31","hashOfConfig":"22"},{"size":3475,"mtime":1635707084439,"results":"32","hashOfConfig":"22"},{"size":2983,"mtime":1636158193387,"results":"33","hashOfConfig":"22"},{"size":711,"mtime":1620877310662,"results":"34","hashOfConfig":"22"},{"size":5665,"mtime":1620877226847,"results":"35","hashOfConfig":"22"},{"size":7560,"mtime":1635741722223,"results":"36","hashOfConfig":"22"},{"size":14136,"mtime":1621733938147,"results":"37","hashOfConfig":"22"},{"size":8839,"mtime":1620877618757,"results":"38","hashOfConfig":"22"},{"size":5603,"mtime":1635740301580,"results":"39","hashOfConfig":"22"},{"size":1981,"mtime":1621733937755,"results":"40","hashOfConfig":"22"},{"size":1272,"mtime":1620879320675,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1tuzu4a",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/home/marcos/app/marccent/client/src/index.js",[],["88","89"],"/home/marcos/app/marccent/client/src/App.js",[],"/home/marcos/app/marccent/client/src/serviceWorker.js",[],"/home/marcos/app/marccent/client/src/components/theme.js",[],"/home/marcos/app/marccent/client/src/components/var.js",[],"/home/marcos/app/marccent/client/src/components/urls.js",[],"/home/marcos/app/marccent/client/src/components/inc/main-nav.js",["90"],"import React, { Component, Fragment } from \"react\";\nimport { ThemeContext } from \"../var\";\nimport { Link } from 'react-router-dom';\nimport { GetMode } from \"../inc/inc\";\nimport { Clock } from \"../inc/inc-classes\";\nimport '../../styles/inc/Nav.scss';\n\nclass Nav extends Component {\n\n  static contextType = ThemeContext;\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuOpen: false,\n      path: ''\n    }\n  }\n\n  toggleMenu = () => {\n    this.setState({\n      menuOpen: this.state.menuOpen ? false : true\n    });\n  }\n\n  render() {\n    if (this.context.theme.id === 0) return <Fragment>Loading...</Fragment>\n    const a = this.context.theme;\n    const link = {\n      background: `linear-gradient(to bottom, ${a.hex.primary}, ${a.hex.secondary})`\n    }\n\n    const toggle = {\n      background: `linear-gradient(to bottom, ${a.hex.primary}, ${a.hex.secondary})`,\n      border: `1px solid ${a.hex.secondary}`\n    }\n    \n    const mobile = {\n      backgroundColor: a.mode,\n      display: this.state.menuOpen ? 'block' : 'none'\n    }\n    \n    const background = `main-nav flex-center${a.glass ? ' glass' : ''}`;\n    const grad = `linear-gradient(to bottom, ${a.hex.secondary}, ${a.hex.primary})`;\n    const clockstyles = {\n      border: `1px solid ${a.hex.secondary}`,\n      text: a.hex.secondary,\n      bg: GetMode(a, '0.5')\n    }\n    return  (\n      <nav className={background} style={{backgroundColor: a.mode}}>\n        <div className=\"container flex-row\">\n          <ul className=\"navigation\" style={link}>\n            <li>\n              <Link to=\"/\"><i className=\"fas fa-home\"></i> Home</Link>\n            </li>\n            <li style={{borderColor: a.hex.secondary}}>\n              <Link to=\"/portfolio\"><i className=\"fas fa-folder-open\"></i> Portfolio</Link>\n            </li>\n            <li style={{borderColor: a.hex.secondary}}>\n              <Link to=\"/apps/minesweeper\"><i className=\"fab fa-windows\"></i> Apps</Link>\n            </li>\n            <li style={{borderColor: a.hex.secondary}}>\n              <Link to=\"/about\"><i className=\"fas fa-address-card\"></i> About</Link>\n            </li>\n            <li style={{borderColor: a.hex.secondary}}>\n              <Link to=\"/contact\"><i className=\"fas fa-comments\"></i> Contact</Link>\n            </li>\n          </ul>\n          <div className=\"mobile-navigation\" style={mobile}>\n            <ul style={link}>\n              <li><Link to=\"/\"><i className=\"fas fa-home\"></i> Home</Link></li>\n              <li><Link to=\"/portfolio\"><i className=\"fas fa-folder-open\"></i> Portfolio</Link></li>\n              <li><Link to=\"/apps/minesweeper\"><i className=\"fab fa-windows\"></i> Apps</Link></li>\n              <li><Link to=\"/about\"><i className=\"fas fa-address-card\"></i> About</Link></li>\n              <li><Link to=\"/contact\"><i className=\"fas fa-comments\"></i> Contact</Link></li>\n            </ul>\n          </div>\n          <i className=\"toggle fas fa-bars\" style={toggle} onClick={() => this.toggleMenu()}></i>\n          <Clock data={clockstyles} />\n        </div>\n      </nav>\n    )        \n  }\n}\n\nexport default Nav;","/home/marcos/app/marccent/client/src/components/inc/footer.js",[],"/home/marcos/app/marccent/client/src/components/inc/inc.js",["91","92"],"import React, {} from \"react\";\nimport { Link } from 'react-router-dom';\n\nconst CurrentDate = new Date();\n\nconst LinGrad = (a, b) => `linear-gradient(to right, ${a}, ${b})`;\n\nconst GetColor = (rgb, op) => `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${op})`;\n\nconst GetRgb = hex => {\n  let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return {\n    r: parseInt(result[1], 16),\n    g: parseInt(result[2], 16),\n    b: parseInt(result[3], 16)\n  }\n}\n\nconst GetMode = (a, op) => a.is_dark ? GetColor(a.rgb.dark, op) : GetColor(a.rgb.light, op);\n\nconst RevColor = (a, op) => !a.is_dark ? GetColor(a.rgb.dark, op) : GetColor(a.rgb.light, op);\n\nconst RandomNum = (min, max) => Math.floor(Math.random() * (max - min + 1) + min);\n\nconst Button = props => {\n  return (\n    <button \n      style={props.styles} \n      aria-label={props.text} \n      className={props.className} \n      onClick={() => props.onClick()}\n    >\n      <i className=\"fab fa-edge rotate\"></i> \n      <span style={{marginLeft: '5px'}}>{props.text}</span>\n    </button>\n  )\n}\n\nconst Bomb = () => {\n  function hover(a) {\n    a.target.style.background = 'none';\n  }\n  return (\n  <i className=\"fas fa-bomb\" \n    onMouseOver={hover.bind(this)}\n    onMouseLeave={hover.bind(this)}\n    style={{backgroundColor: 'none !important'}}\n    >\n    </i>\n  )\n}\n\nconst Flag = () => {\n  function hover(a) {\n    a.target.style.background = 'none';\n  }\n  return (\n  <i className=\"fas fa-flag\" \n    onMouseOver={hover.bind(this)}\n    onMouseLeave={hover.bind(this)}\n    style={{backgroundColor: 'none !important'}}\n    >\n  </i>)\n}\n\nconst Background = props => {\n  const arr = [];\n  for (let i = 0; i < 8; i++) {\n    let ran = RandomNum(60, 100);\n    let ball = {\n      width: `${ran * 3}px`,\n      height: `${ran * 3}px`,\n      top: `${RandomNum(60, 100)}%`,\n      left: `${RandomNum(60, 100)}%`\n    }\n    arr.push(ball);\n  };\n  for (let i = 0; i < 8; i++) {\n    let ran = RandomNum(60, 100);\n    let ball = {\n      width: `${ran * 3}px`,\n      height: `${ran * 3}px`,\n      top: `${RandomNum(0, 40)}%`,\n      left: `${RandomNum(0, 40)}%`\n    }\n    arr.push(ball);\n  };\n  return (\n    <React.Fragment key=\"1\">\n      <div className=\"bg\"><div className=\"cont\">\n        {arr.map((i, index) => <div key={index} className=\"ball\" style={i}></div>)}\n      </div></div>\n      <Blur />\n    </React.Fragment>\n  )\n}\n\nconst WaveSvg = (props) => {\n  const classes = `wave-section wave-${props.dir}`;\n  return (\n    <svg \n      className={classes} \n      style={props.styles} \n      xmlns=\"http://www.w3.org/2000/svg\" \n      viewBox=\"0 0 1000 100\" \n      preserveAspectRatio=\"none\"\n    >\n      <path \n        className=\"fill wave-one\" \n        opacity=\"0.33\" \n        d=\"M473,67.3c-203.9,88.3-263.1-34-320.3,0C66,119.1,0,59.7,0,59.7V0h1000v59.7 c0,0-62.1,26.1-94.9,29.3c-32.8,3.3-62.8-12.3-75.8-22.1C806,49.6,745.3,8.7,694.9,4.7S492.4,59,473,67.3z\"\n      ></path>\n      <path \n        className=\"fill wave-one\" \n        opacity=\"0.66\" \n        d=\"M734,67.3c-45.5,0-77.2-23.2-129.1-39.1c-28.6-8.7-150.3-10.1-254,39.1 s-91.7-34.4-149.2,0C115.7,118.3,0,39.8,0,39.8V0h1000v36.5c0,0-28.2-18.5-92.1-18.5C810.2,18.1,775.7,67.3,734,67.3z\"\n      ></path>\n      <path \n        className=\"fill wave-one\" \n        d=\"M766.1,28.9c-200-57.5-266,65.5-395.1,19.5C242,1.8,242,5.4,184.8,20.6C128,35.8,132.3,44.9,89.9,52.5C28.6,63.7,0,0,0,0 h1000c0,0-9.9,40.9-83.6,48.1S829.6,47,766.1,28.9z\"\n      ></path>\n    </svg>\n  )\n}\n\nconst Blur = props => {\n  return (\n    <svg className=\"blur-svg\">\n      <defs>\n        <filter id=\"filter\">\n          <feGaussianBlur \n            in=\"SourceGraphic\" \n            stdDeviation=\"18\" \n            result=\"blur\"\n         />\n          <feColorMatrix \n            in=\"blur\" \n            mode=\"matrix\" \n            values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 28 -10\" \n            result=\"filter\" \n          />\n          <feComposite \n            in=\"SourceGraphic\" \n            in2=\"filter\" \n            operator=\"atop\" \n          />\n        </filter>\n      </defs>\n    </svg>\n  )\n}\n\nconst Title = props => {\n  return (<h2 className=\"header flex-center\" style={props.style}>{props.text}</h2>)\n}\n\nconst Img = props => {\n  return (<React.Fragment key=\"1\">\n    <img \n      src={props.src} \n      alt={props.alt}\n      style={props.styles} \n      loading=\"lazy\" \n    />\n  </React.Fragment>)\n}\n\nconst FooterText = props => {\n  return (\n    <div className=\"footer flex-center\" style={props.style}>\n      Copyright ©{CurrentDate.getFullYear()} \n      Marccent. All rights reserved | \n      <ul>\n        <li><Link style={props.style} to=\"/privacy-policy\"> Privacy Policy</Link></li>\n      </ul>\n    </div>\n  )\n}\n\nconst Notebook = props => {\n  const a = props.data;\n  const notebook = {\n    backgroundColor: GetMode(a, 0.3),\n  }\n  const full = {\n    backgroundColor: GetMode(a, 0.5),\n    color: a.rev\n  }\n  return (\n    <div className=\"notebook\">\n      <div className=\"layer-1\" style={notebook}>\n      <div className=\"layer-2\" style={notebook}>\n      <div className=\"layer-3\" style={notebook}>\n      <div className=\"layer-4\" style={notebook}>\n      <div className=\"layer-5\" style={notebook}>\n      <div className=\"layer-6\" style={notebook}>\n        <div className=\"notebook-content\" style={full}>{props.children}</div>\n      </div>\n      </div>\n      </div>\n      </div>\n      </div>\n      </div>\n    </div>\n  )\n}\n\nconst CustDate = (props) => {\n  const i = props.date ? new Date(props.date) : CurrentDate;\n  const days = [\n    \"Sunday\", \n    \"Monday\", \n    \"Tuesday\", \n    \"Wednesday\",\n    \"Thursday\", \n    \"Friday\", \n    \"Saturday\"\n  ];\n  const month = [\n    'January', \n    'February', \n    'March', \n    'April', \n    'May', \n    'June', \n    'July', \n    'August', \n    'September', \n    'October', \n    'November', \n    'December'\n  ];\n  const o = FormatTime(i);\n  let string = '';\n  if (props.ver) {\n    let e = props.ver;\n    if (e == '1') string = `${days[i.getDay()]}, ${month[i.getMonth()]} ${i.getDate()}, ${i.getFullYear()}`;\n    if (e == '2') string = `${days[i.getDay()]} ${i.getDate()}, ${o.hour}:${o.min} ${o.tod}`;\n  }\n  \n  return (string);\n}\n\nconst SpCircle = props => {\n  if (!props.data) return (<div>No data Found</div>)\n  const o = props.styles;\n  return (\n    <div className=\"cir cir-xl flex-center\" style={o.circle}>\n      <div className=\"cir cir-ml flex-center\" style={o.grad}>\n        <div className=\"cir cir-m anim flex-center\" style={o.innerCircle}>\n          {props.children}\n        </div>\n      </div>\n    </div>\n  ) \n}\n\nconst ColorList = is_dark => {\n  const list = {}\n  if (is_dark) {\n    list.a = '#6b6b6b';\n    list.b = '#212121';\n    list.c = '#181818';\n    list.d = '#000000';\n  } else {\n    list.a = '#656565';\n    list.b = '#f5f5f5';\n    list.c = '#e5e5e5';\n    list.d = '#FFFFFF';\n  }\n  return list;\n}\n\nconst MapStyle = (a) => {\n  const col =  ColorList(a.is_dark);\n  const mode = a.is_dark ? a.hex.dark : a.hex.light;\n  const rev = a.is_dark ? a.hex.light : a.hex.dark;\n  const prim = a.hex.primary;\n  const sec = a.hex.secondary;\n  return [\n    {elementType: 'geometry', stylers: [{color: mode}]},\n    {elementType: 'labels.text.stroke', stylers: [{color: rev}]},\n    {elementType: 'labels.text.fill', stylers: [{color: mode}]},\n    {featureType: 'administrative.locality', elementType: 'labels.text.fill', stylers: [{color: mode}]},\n    {featureType: 'poi', elementType: 'labels.text.fill', stylers: [{color: mode}]},\n    {featureType: 'poi.park', elementType: 'geometry', stylers: [{color: col.c}]},\n    {featureType: 'poi.park', elementType: 'labels.text.fill', stylers: [{color: mode}]},\n    {featureType: 'road', elementType: 'geometry', stylers: [{color: sec}]},\n    {featureType: 'road', elementType: 'geometry.stroke', stylers: [{color: col.d}]},\n    {featureType: 'road', elementType: 'labels.text.fill', stylers: [{color: mode}]},\n    {featureType: 'road.highway', elementType: 'geometry', stylers: [{color: prim}]},\n    {featureType: 'road.highway', elementType: 'geometry.stroke', stylers: [{color: sec}]},\n    {featureType: 'road.highway', elementType: 'labels.text.fill', stylers: [{color: mode}]},\n    {featureType: 'transit', elementType: 'geometry', stylers: [{color: prim}]},\n    {featureType: 'transit.station', elementType: 'labels.text.fill', stylers: [{color: mode}] },\n    {featureType: 'water', elementType: 'geometry', stylers: [{color: col.d}]},\n    {featureType: 'water', elementType: 'labels.text.fill', stylers: [{color: mode}]},\n    {featureType: 'water', elementType: 'labels.text.stroke', stylers: [{color: rev}]}\n  ]\n}\n\nconst FormatTime = (i) => {\n  const singleDig = (num) => {\n    return num < 10 ? `0${num}` : num;\n  }\n  return {\n    hour: singleDig(i.getHours() > 12 ? i.getHours() - 12 : i.getHours()),\n    min: singleDig(i.getMinutes()),\n    sec: singleDig(i.getSeconds()),\n    tod: i.getHours() > 12 ? 'PM' : 'AM'\n  }\n}\n\nexport { \n    SpCircle, Blur, Button, Background, Title, FooterText, MapStyle, Bomb, Notebook, GetMode,\n    CurrentDate, CustDate, Img, ColorList, RandomNum, Flag, LinGrad, GetColor, GetRgb, RevColor,\n    WaveSvg, FormatTime\n}","/home/marcos/app/marccent/client/src/components/sections/hero-banner.js",["93","94","95"],"import React, { Component, Fragment } from 'react';\nimport { ThemeContext } from \"../var\"\nimport { Notebook } from \"../inc/inc\";\nimport { StatusBar } from \"../inc/inc-classes\";\n\nclass HeroBanner extends Component {\n   \n  static contextType = ThemeContext;\n  render() {\n    if (this.context.theme.id === 0) return <Fragment>Loading...</Fragment>\n    const a = this.context.theme;\n    const bar = {\n      current: 3, \n      total: 5,\n      speed: 200\n    }\n    const barStyles = {\n      background: a.rev,\n      color: a.mode\n    }\n    return (\n      <section className=\"hero-banner flex-center\" style={{margin: '0'}}>\n        <div className=\"container\" style={{overflow: 'visible', width: '75%'}}>\n          <Notebook data={a}>\n            <h1>Hello, My Name is Marcos Centeno</h1>\n            <h2>A Web Developer that specializes in front-end development</h2>\n            <h3>Take a look around</h3>\n            <h4>Work in progress, website under construction.</h4>\n          </Notebook>\n        </div>\n      </section>\n    )\n  }\n}\n\nexport default HeroBanner;","/home/marcos/app/marccent/client/src/components/pages/contact.js",["96"],"import React, { Component, Fragment } from \"react\";\nimport { ThemeContext } from \"../var\"\nimport { PopUp } from \"../inc/inc-classes\";\nimport '../../styles/pages/Contact.scss';\nimport Maps from \"../map\";\nimport Modal from 'react-modal';\nimport ValidForm from 'react-valid-form-component';\nimport { GetMode, Title, WaveSvg } from \"../inc/inc\";\n\nconst server = `${process.env.REACT_APP_STRAPIURL}`;\nModal.setAppElement('#app');\n\nclass Contact extends Component {\n\n  state = {\n    name: '',\n    email: '',\n    message: '',\n    modal: false\n  }\n\n  onClick = async () => {\n    const res = await fetch(`${server}messages/`, {\n      method: 'POST',\n      credentials: 'same-origin',\n      headers: new Headers({'Content-Type': 'application/json', 'Accept': 'application/json'}),\n      body: JSON.stringify(this.state)\n    });\n    let response = await res.json();\n    if (response.id) {\n      this.setState({ modal: true });\n    }\n  }\n  nameChange = e => this.setState({ name: e.target.value});\n  emailChange = e => this.setState({ email: e.target.value});\n  messageChange = e => this.setState({ message: e.target.value});\n\n  static contextType = ThemeContext;\n  render() {\n    if (this.context.theme.id === 0) return <Fragment>Loading...</Fragment>\n    const a = this.context.theme;\n    const e = this.state;\n    const mode = GetMode(a, 1);\n    const bg = {\n      border: `1px solid ${a.hex.primary}`\n    }\n    const btn = {\n      background: a.grad,\n      color: a.hex.light\n    }\n    const mapData = {\n      loc: {\n        lat: 43.5, \n        lng: -112.05\n      },\n      zoom: 11\n    }\n    let background = `page-contact${a.glass ? ' glass' : ''}`;\n    return  (\n      <section className={background}>\n        <WaveSvg dir=\"top\" styles={{ fill: a.mode}} />\n        <div className=\"contact flex-center\">\n          <div className=\"map-size\" style={{height: '600px'}}>\n            <Maps mapData={mapData} />\n          </div>\n          <div className=\"form-area flex-row\" style={{ backgroundColor: mode }}>\n            <ValidForm \n              nosubmit \n              onSubmit={(e) => this.onClick(e)} \n              className=\"flex-col contact-info\" \n            >\n              <h3 style={{color: a.rev}}>GET IN TOUCH</h3>\n              <input \n                name=\"full_name\"\n                type=\"text\" \n                required\n                placeholder=\"Full Name\" \n                style={bg} \n                onChange={this.nameChange} \n                value={e.name}\n              />\n              <input \n                name=\"email\"\n                type=\"email\" \n                required\n                placeholder=\"Email\" \n                style={bg} \n                value={e.email} \n                onChange={this.emailChange} \n              />\n              <textarea \n                required\n                name=\"message\"\n                style={bg} \n                placeholder=\"Message\" \n                value={e.message} \n                onChange={this.messageChange} \n                rows=\"5\"\n              ></textarea>\n              <button className=\"btn\" style={btn} type=\"submit\">Send Form</button>\n            </ValidForm>\n            <div className=\"\">\n\n            </div>\n          </div>\n          \n        </div>\n        <WaveSvg dir=\"bottom\" styles={{ fill: a.mode}} />\n        <PopUp header=\"Status\" display={this.state.modal}>\n          <p>Message has been received.</p>\n        </PopUp>\n      </section>\n    )        \n  }\n}\n\nexport default Contact;","/home/marcos/app/marccent/client/src/components/pages/portfolio.js",[],"/home/marcos/app/marccent/client/src/components/pages/apps.js",[],"/home/marcos/app/marccent/client/src/components/pages/about.js",[],"/home/marcos/app/marccent/client/src/components/mini-app/temperature.js",["97"],"import React, { Component, Fragment } from \"react\";\nimport { ThemeContext } from \"../var\"\nimport JwPagination from 'jw-react-pagination';\nimport ValidForm from 'react-valid-form-component';\nimport \"../../styles/mini-app/Temperature.scss\";\nimport '../../styles/keyframes.scss';\nimport { CustDate, Img, SpCircle, GetMode, FormatDate } from \"../inc/inc\";\nimport { Clock, Accordion } from \"../inc/inc-classes\";\nimport Maps from \"../map\";\nconst openWeather = `${process.env.REACT_APP_OPENWEATHERURL}data/2.5/forecast`;\nconst token = `&units=imperial&appid=${process.env.REACT_APP_OPENWEATHER}`;\n\nclass Temperature extends Component {\n\n    static contextType = ThemeContext;\n    state = {\n      query: false,\n      city: false\n    }\n    \n    componentDidMount() {\n      this.setState({\n        query: 'Idaho Falls',\n      }, () => this.update());\n    }\n\n    async update() {\n      const res = await fetch(`${openWeather}?q=${this.state.query}${token}`);\n      const data = await res.json();\n      if (data.cod === \"200\") {\n        this.setState({\n          city: data\n        });\n      } \n    }\n\n    onClick = () => this.update();\n\n    onChange = (e) => this.setState({query: e.target.value});\n\n    render() {\n      if (!this.state.city) return <Fragment>Loading...</Fragment>\n      const a = this.context.theme;\n      const e = this.state.city;\n      const sec = {\n        background: a.mode,\n      }\n      const bg = {\n        background: a.grad,\n        color: a.hex.light\n      }\n      const input = {\n        border: `solid 1px ${a.hex.primary}`,\n        backgroundColor: a.mode,\n        marginRight: '3px !important'\n      }\n      const mapData = {\n        loc: {\n          lat: e.city.coord.lat,\n          lng: e.city.coord.lon\n        },\n        zoom: 11\n      }\n      let background = `container flex-row${a.glass ? ' glass' : ''}`;\n      return  (\n        <section className=\"temp flex-center\">\n          <div className={background} style={sec}>\n            <div className=\"header flex-row w-100\" style={{alignItems:'flex-start',padding:'1rem calc(3rem + 0.5%)'}}>\n              <h3>{e.city.name}'s Population: {e.city.population}</h3>\n              <ValidForm nosubmit onSubmit={(e) => this.onClick()} className=\"flex-row contact-info\" style={{flexWrap: 'nowrap'}}>\n                <input \n                  name=\"city\"\n                  type=\"text\" \n                  required\n                  placeholder={this.state.query} \n                  style={input} \n                  onChange={this.onChange} \n                />\n                <span style={{width: '10px'}}></span>\n                <button className=\"btn\" style={bg} type=\"submit\">Send Form</button>\n              </ValidForm>\n            </div>\n            <div className=\"w-50\" style={{padding: '0 3rem'}}>\n              <TempCir temp={e.list[0]} />\n              <div className=\"map-size\" style={{marginTop: '2rem', height: '400px'}}>\n                <Maps mapData={mapData} />\n              </div>\n            </div>\n            <div className=\"w-50\" style={{padding: '0 3rem'}}>\n              <h3>Weather Forecast</h3>\n              <WeatherHistory list={e.list} />\n            </div>\n          </div>\n        </section>\n      )        \n    }\n}\n\nclass WeatherHistory extends Component {\n\n  static contextType = ThemeContext;\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: this.props.list,\n      pageOfItems: []\n    }\n    this.onChangePage = this.onChangePage.bind(this);\n  }\n\n  UNSAFE_componentWillReceiveProps(props) {\n    this.setState({\n      items: props.list\n    });\n  }\n  \n  onChangePage(pageOfItems) {\n    this.setState({ pageOfItems: pageOfItems }); // update local state with new page of items\n  }\n  \n  render() {\n    if (this.context.theme.id === 0) return <Fragment>Loading...</Fragment>\n    const a = this.context.theme;\n    const paginationStyles = {\n      li: {\n        background: a.rev,\n        color: a.mode\n      }\n    }\n    return (\n      <div className=\"flex-row history\">\n        {this.state.pageOfItems.map((item, index) => (\n          <List key={index} data={a} item={item} />\n        ))}\n        <JwPagination \n          pageSize={10} \n          items={this.state.items} \n          onChangePage={this.onChangePage}\n          styles={paginationStyles}\n        />\n      </div>\n    )\n  }\n}\n\nclass List extends Component {\n    \n  static contextType = ThemeContext;\n  render() {\n    if (this.context.theme.id === 0) return <Fragment>Loading...</Fragment>\n    const a = this.context.theme;\n    const o = this.props.item;\n    const icon = `${process.env.REACT_APP_OPENWEATHERURL}img/w/${o.weather[0].icon}.png`;\n    const bg = {\n      background: a.grad,\n      color: a.hex.light\n    }\n\n    return (\n      <div className=\"list-outer shadow-s\" style={{background: a.mode}}>\n        <div style={bg} className=\"list-inner shadow-xs\">\n        <Accordion>\n          <span className=\"head-content\">\n            <Img src={icon} styles={{width: '40px'}} alt={o.weather[0].description} />\n            <strong>{o.main.temp}&#176;</strong>\n            <span><CustDate date={o.dt_txt}ver=\"2\" /></span>\n          </span>\n          <div className=\"body-content flex-row\">\n            <div style={{width:'50%',padding: '0 0.5rem'}} className=\"flex-col\">\n              <strong>{o.weather[0].description}</strong>\n              <span>Humidity: {o.main.humidity}</span>\n            </div>\n            <div style={{width:'50%',padding: '0 0.5rem'}} className=\"flex-col\">\n              <span>Low: {o.main.temp_min}</span>\n              <span>High: {o.main.temp_max}</span>\n              <span>Feels like: {o.main.feels_like}</span>\n            </div>\n          </div>\n        </Accordion>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass TempCir extends Component {\n\n  static contextType = ThemeContext;\n  constructor(props) {\n    super(props);\n    this.state = {\n      temp: this.props.temp\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(props) {\n    this.setState({\n      temp: props.temp\n    });\n  }\n\n  render() {\n    if (this.context.theme.id === 0) return <Fragment>Loading...</Fragment>\n    const a = this.context.theme;\n    const o = this.state.temp;\n    const prim = a.hex.primary;\n    const sec = a.hex.secondary;\n    const circle = {\n      circle: {\n        backgroundColor: a.mode,\n        boxShadow: 'inset 0 0 15px rgba(0,0,0,0.5)'\n      },\n      innerCircle: {\n        backgroundColor: a.mode,\n        boxShadow: 'inset 0 0 75px rgba(0,0,0,0.5)'\n      },\n      grad: {\n        backgroundImage: a.grad,\n        boxShadow: 'inset 0 0 15px rgba(0,0,0,0.5)'\n      }\n    }\n    const clockstyles = {\n      border: `1px solid ${a.rev}`,\n      text: a.rev,\n      bg: GetMode(a, '0.5')\n    }\n    const icon = `https://openweathermap.org/img/w/${o.weather[0].icon}.png`;\n    const grad = `linear-gradient(to bottom, ${sec}, ${prim})`;\n    return (\n      <SpCircle styles={circle} data={a}>\n        <div className=\"water\" style={{ background: grad }}></div>\n        <div className=\"water-circle one\" style={{ backgroundColor: a.mode }}></div>\n        <div className=\"water-circle two\" style={{ backgroundColor: a.mode }}></div>\n        <div className=\"box-shadow\"></div>\n        <div className=\"temp-cont flex-col\" style={{color: a.rev}}>\n          <Img src={icon} styles={{width: '60%', marginBottom: '-1rem'}} alt={o.weather[0].description} />\n          <h3 style={{padding: '0'}}>{o.main.temp}&#176;</h3>\n          <small><CustDate ver=\"1\" /></small>\n          <Clock data={clockstyles} />\n        </div>\n      </SpCircle>\n    )\n  }\n}\nexport default Temperature;","/home/marcos/app/marccent/client/src/components/mini-app/minesweeper.js",[],"/home/marcos/app/marccent/client/src/components/pages/privacy-policy.js",[],"/home/marcos/app/marccent/client/src/components/inc/inc-classes.js",[],"/home/marcos/app/marccent/client/src/components/map.js",[],"/home/marcos/app/marccent/client/src/components/inc/app-nav.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":43,"column":11,"nodeType":"104","messageId":"105","endLine":43,"endColumn":15},{"ruleId":"106","severity":1,"message":"107","line":237,"column":11,"nodeType":"108","messageId":"109","endLine":237,"endColumn":13},{"ruleId":"106","severity":1,"message":"107","line":238,"column":11,"nodeType":"108","messageId":"109","endLine":238,"endColumn":13},{"ruleId":"102","severity":1,"message":"110","line":4,"column":10,"nodeType":"104","messageId":"105","endLine":4,"endColumn":19},{"ruleId":"102","severity":1,"message":"111","line":12,"column":11,"nodeType":"104","messageId":"105","endLine":12,"endColumn":14},{"ruleId":"102","severity":1,"message":"112","line":17,"column":11,"nodeType":"104","messageId":"105","endLine":17,"endColumn":20},{"ruleId":"102","severity":1,"message":"113","line":8,"column":19,"nodeType":"104","messageId":"105","endLine":8,"endColumn":24},{"ruleId":"102","severity":1,"message":"114","line":7,"column":44,"nodeType":"104","messageId":"105","endLine":7,"endColumn":54},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'grad' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'StatusBar' is defined but never used.","'bar' is assigned a value but never used.","'barStyles' is assigned a value but never used.","'Title' is defined but never used.","'FormatDate' is defined but never used.","no-global-assign","no-unsafe-negation"]